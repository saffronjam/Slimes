#version 430

layout(local_size_x = 1, local_size_y = 1) in;
layout(rgba32f, binding = 0) uniform image2D img_output;
layout(rgba32f, binding = 1) uniform image2D img_data;
layout(rgba32f, binding = 2) uniform image2D img_palette;

uniform float maxPixelValue;
uniform int paletteWidth;

float map(float value, float min1, float max1, float min2, float max2) {
  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);
}

void main() {

	vec2 id = gl_GlobalInvocationID.xy;

	float current = imageLoad(img_data, ivec2(id)).x;

	float final = map(current, 0.0, maxPixelValue, 0.0, paletteWidth);

	// output to a specific pixel in the image
	imageStore(img_output, ivec2(id), imageLoad(img_palette, ivec2(clamp(final, 0, paletteWidth - 1), 0)));
}
